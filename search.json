[{"title":"git push","url":"/2019/06/28/2019_06_28_git_push/","content":"**git push**: updates remote refs using local refs\n```shell\ngit push  [--all | --mirror | --tags]\n          [--prune]\n          [<repository> [<refspec>...]]\n```\n\n\n## repository\n\n`<repository>`指定远程仓库\n\n缺省时， 参考顺序为\n1. `branch.*.remote`，'*'指branch\n2. `origin`\n\n\n## refspec\n\n`<refspec>`指定what destination ref to update with what source object。\n\n缺省`<refspec>`并且没指定`--all`, `--mirror`, `--tags`时，参考顺序为\n1. `remote.*.push`，'*'指remote仓库 \n2. `push.default`\n3. 当命令行或配置都没有的情况下，会发生the current branch is pushed to the corresponding upstream branch, but as a safety measure, the push is aborted if the upstream branch does not have the same name as the local one\n\n格式为`[+]<src>:<dst>`\n\n`<src>`一般是想要push的分支名，但可以是任何 \"SHA-1 expression\"。例如`master~4`,`HEAD`\n\n`<dst>`指出远端的哪个ref需要被更新，必须是一个实际的ref\n\n`:<dst>`也可缺省，缺省时参考顺序为\n1. `remote.<repository>.push`\n2. same ref as the `<src>`\n\n如果`<dst>`不是以`refs/`开始，那么git会尝试去推测完整的ref,当给出的`<dst>`能唯一找到一个ref时，直接使用。如果不行，会根据`<src>`所在的`refs/`来推断。\n\n\n## --prune\n\n将所有已经不存在对应本地分支的远程分支移除。例如，一个远程分支名为`tmp`,如果本地不存在同名分支了，那么在运行这个命令后远程分支`tmp`会被移除。\n\n\n## --all,--mirror,--tags\n\n**--all**\n\n将refs under `refs/heads/` （所有分支）push到远端\n\n**--mirror**\n\n将all refs under `refs/` (包括`refs/heads/`, `refs/remotes/`, `refs/tags/`……) 映射到远端\n\n**--tags**\n\n将all refs under `refs/tags` push 到远端\n","tags":["git"]},{"title":"Hello World","url":"/2019/06/28/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]